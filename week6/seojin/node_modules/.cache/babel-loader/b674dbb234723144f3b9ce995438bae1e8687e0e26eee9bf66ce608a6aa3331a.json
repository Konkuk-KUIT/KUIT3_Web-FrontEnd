{"ast":null,"code":"var _jsxFileName = \"/Users/seojinkim/KUIT3_Web-FrontEnd/week6/seojin/src/components/InputBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InputBar = ({\n  product,\n  addProduct,\n  setIsEditBtnClicked,\n  editProduct\n}) => {\n  _s();\n  const [newProduct, setNewProduct] = useState({\n    ...product,\n    id: uuid()\n  });\n  const handleChange = (value, label) => {\n    setNewProduct({\n      ...newProduct,\n      [label]: value\n    });\n  };\n  const handleClickProductBtn = () => {\n    editProduct !== undefined ? product.id !== newProduct.id && editProduct(product, {\n      ...newProduct,\n      id: uuid()\n    }) : addProduct({\n      ...newProduct,\n      id: uuid()\n    });\n    setNewProduct({\n      category: \"\",\n      price: 0,\n      stocked: true,\n      name: \"\",\n      id: uuid()\n    });\n    setIsEditBtnClicked !== undefined && setIsEditBtnClicked(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newProduct.category,\n      onChange: e => {\n        handleChange(e.target.value, \"category\");\n      },\n      placeholder: \"category...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newProduct.price,\n      onChange: e => {\n        handleChange(e.target.value, \"price\");\n      },\n      placeholder: \"price...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Is Stocked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: newProduct.stocked,\n      onChange: e => {\n        handleChange(e.target.checked, \"stocked\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newProduct.name,\n      onChange: e => {\n        handleChange(e.target.value, \"name\");\n      },\n      placeholder: \"name...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickProductBtn,\n      type: \"button\",\n      children: \"Add new product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(InputBar, \"i7atxib6mLpfDBcv+2ynDkcKZaM=\");\n_c = InputBar;\nexport default InputBar;\nvar _c;\n$RefreshReg$(_c, \"InputBar\");","map":{"version":3,"names":["React","useState","uuid","jsxDEV","_jsxDEV","Fragment","_Fragment","InputBar","product","addProduct","setIsEditBtnClicked","editProduct","_s","newProduct","setNewProduct","id","handleChange","value","label","handleClickProductBtn","undefined","category","price","stocked","name","children","type","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/seojinkim/KUIT3_Web-FrontEnd/week6/seojin/src/components/InputBar.tsx"],"sourcesContent":["import React, { ChangeEvent, useState } from \"react\";\nimport { Product } from \"../App\";\nimport uuid from \"react-uuid\";\n\ninterface Props {\n  product: Product;\n  addProduct: (product: Product) => void;\n  setIsEditBtnClicked?: React.Dispatch<React.SetStateAction<boolean>>;\n  editProduct?: (removeProduct: Product, newProduct: Product) => void;\n}\n\nconst InputBar: React.FC<Props> = ({\n  product,\n  addProduct,\n  setIsEditBtnClicked,\n  editProduct,\n}) => {\n  const [newProduct, setNewProduct] = useState<Product>({\n    ...product,\n    id: uuid(),\n  });\n\n  const handleChange = (value: string | boolean, label: keyof Product) => {\n    setNewProduct({ ...newProduct, [label]: value });\n  };\n\n  const handleClickProductBtn = () => {\n    editProduct !== undefined\n      ? product.id !== newProduct.id &&\n        editProduct(product, { ...newProduct, id: uuid() })\n      : addProduct({ ...newProduct, id: uuid() });\n\n    setNewProduct({\n      category: \"\",\n      price: 0,\n      stocked: true,\n      name: \"\",\n      id: uuid(),\n    });\n    setIsEditBtnClicked !== undefined && setIsEditBtnClicked(false);\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={newProduct.category}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n          handleChange(e.target.value, \"category\");\n        }}\n        placeholder=\"category...\"\n      />\n      <input\n        type=\"text\"\n        value={newProduct.price}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n          handleChange(e.target.value, \"price\");\n        }}\n        placeholder=\"price...\"\n      />\n      <label>Is Stocked</label>\n      <input\n        type=\"checkbox\"\n        checked={newProduct.stocked}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n          handleChange(e.target.checked, \"stocked\");\n        }}\n      />\n      <input\n        type=\"text\"\n        value={newProduct.name}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n          handleChange(e.target.value, \"name\");\n        }}\n        placeholder=\"name...\"\n      />\n      <button onClick={handleClickProductBtn} type=\"button\">\n        Add new product\n      </button>\n    </>\n  );\n};\n\nexport default InputBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}